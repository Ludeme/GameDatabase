(define "NextCanNotMove"
    (not (can Move (do (forEach Piece Next) ifAfterwards:(not ("IsInCheck" "King" Next)))) )
)

(define "CaptureToPieceAndResetCounter"
    (apply 
        (if (is Enemy (who at:(to)))
            (and
                (remove 
                    (to) 
                    (then (set Counter))
                )
                (remember Value "CapturedPieces" (what at:(to)))
            )
        )
    ) 
)

(define "CaptureForwardDiagonal"
    (move
        Step 
        (directions {FR FL}) 
        (to 
            if:(is Enemy (who at:(to))) 
            (apply 
                (and
                    (remove (to))
                    (remember Value "CapturedPieces" (what at:(to)))
                )
            )
        )
    )
)

(define "WasCaptured" (is In #1 (values Remembered "CapturedPieces")))

(define "PromoteMove" 
    (or {
        (if ("WasCaptured" (id "Queen" Mover))
            (move Promote #1 (piece {"Queen"}) Mover)
        )
        (if ("WasCaptured" (id "Knight" Mover))
            (move Promote #1 (piece {"Knight"}) Mover)
        )
        (if ("WasCaptured" (id "Rook" Mover))
            (move Promote #1 (piece {"Rook"}) Mover)
        )
        (if ("WasCaptured" (id "Bishop" Mover))
            (move Promote #1 (piece {"Bishop"}) Mover)
        )
        }
        #2		
    )		
)

//------------------------------------------------------------------------------

(game "Quick Chess"  
    (players {(player N) (player S)})  
    (equipment { 
        (board (rectangle 6 5)) 
        
        (piece "Pawn" Each 
            (or {
                "StepForwardToEmpty" 
                "CaptureForwardDiagonal"
                }
                (then
                    (and
                        (if (and (is In (last To) (sites Mover "Promotion")) (can Move ("PromoteMove" (last To))))
                            (moveAgain)
                        )
                        (set Counter)
                    )
                )
            )
        )
        
        (piece "Rook" Each 
            (move
                Slide 
                Orthogonal 
                (to 
                    if:(is Enemy (who at:(to))) 
                    "CaptureToPieceAndResetCounter"
                ) 
            )
        )
        (piece "King" Each 
            (move
                Step 
                (to 
                    if:(not (is Friend (who at:(to)))) 
                    "CaptureToPieceAndResetCounter"
                ) 
            )
        )
        (piece "Bishop" Each 
            (move
                Slide 
                Diagonal 
                (to 
                    if:(is Enemy (who at:(to))) 
                    "CaptureToPieceAndResetCounter"
                ) 
            )
        )
        (piece "Knight" Each 
            (move
                Leap 
                "KnightWalk" 
                (to 
                    if:(not (is Friend (who at:(to)))) 
                    "CaptureToPieceAndResetCounter"
                ) 
            )
        )
        (piece "Queen" Each 
            (move
                Slide 
                (to 
                    if:(is Enemy (who at:(to))) 
                    "CaptureToPieceAndResetCounter"
                ) 
            ) 
        )
        
        (regions "Promotion" P1 (sites Top) )
        (regions "Promotion" P2 (sites Bottom) )
    })  
    (rules 
        (start { 
            (place "Pawn1" (sites Row 1))
            (place "Pawn2" (sites Row 4))
            <Start:rule>
        })
        
        (play 
            (if "SameTurn"
                ("PromoteMove" (last To))
                (do 
                    (forEach Piece)
                    ifAfterwards:(not ("IsInCheck" "King" Mover))
                )
                (then
                    (if
                        (= 19 (counter))
                        (and
                            (forEach Player
                                (forEach Site (sites Occupied by:Player)
                                    (if (= (what at:(site)) (id "Pawn" Player))
                                        (addScore Player 1)
                                        (if (= (what at:(site)) (id "Rook" Player))
                                            (addScore Player 5)
                                            (if (= (what at:(site)) (id "Queen" Player))
                                                (addScore Player 9)
                                                (if (!= (what at:(site)) (id "King" Player))
                                                    (addScore Player 3)
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                            (set Var "NoEnoughCapture" 1)
                        )
                    )
                )
            )
        )
        
        (end {
            (if (and 
                    ("IsInCheck" "King" Next)
                    ("NextCanNotMove")
                ) 
                (result Mover Win)
            ) 
            (if (no Moves Mover) (result Mover Draw))
            (if (= (var "NoEnoughCapture") 1) (byScore)) 
        })
    )
)

//------------------------------------------------------------------------------

(option "Start Rules" <Start> args:{ <rule>} {
    (item "Encyclopedia of Chess Variants"  
        <
        (place "Rook1" {"E1"}) (place "Knight1" {"A1"}) (place "Bishop1" {"D1"}) (place "Queen1" coord:"C1") (place "King1" coord:"B1") 
        (place "Rook2" {"E6"}) (place "Knight2" {"A6"}) (place "Bishop2" {"D6"}) (place "Queen2" coord:"C6") (place "King2" coord:"B6") 
        >
    "The game starts like in the encyclopedia of Chess Variants.")*   
    (item "Quickchess.site"  
        <
        (place "Rook1" {"A1"}) (place "Knight1" {"E1"}) (place "Bishop1" {"B1"}) (place "Queen1" coord:"D1") (place "King1" coord:"C1") 
        (place "Rook2" {"A6"}) (place "Knight2" {"E6"}) (place "Bishop2" {"B6"}) (place "Queen2" coord:"D6") (place "King2" coord:"C6") 
        >
    "The game starts like in the Quickchess.site.")
})

//------------------------------------------------------------------------------

(metadata 
    
    (info
        {
        (description "This game was invented by Joe Miccio in 1991. It is published by Amerigames International, endorsed by Chess Life, and popular on schools in the United States as a game for learning purposes. Sets for this game should be easily available in the United States, and possibly other countries.")
        (rules "The following rules are additionally used to the chess rules:
            - Pawns can only advance one space on their first move. There is no en passant capturing.
            - A pawn can only promote to a captured piece.
            - There is no castling.
        - If 20 moves are played without a capture or promotion, the player with the most `points' on the board wins. (Pawn=1 pt., Bishop/Knight=3, Rook=5, Queen = 9.)")
        (id "1795")
        (source "<a href=\"https://www.chessvariants.com/small.dir/quick.html\" target=\"_blank\" class=\"style1\" style=\"color: #0000EE\" />www.chessvariants.com</a>")
        (version "1.3.4")
        (classification "board/war/replacement/checkmate/chess")
        (author "Joe Miccio")
        (publisher "Amerigames International")
        (credit "Eric Piette")
        (date "1991")
        }
    )
    
    (graphics {
        (show Check "King")
        (piece Scale "Pawn" 0.825)
        (piece Families {"Defined" "Microsoft" "Pragmata" "Symbola"})
        (board Style Chess)
    })
    
)
