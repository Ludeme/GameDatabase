(game "Dilion"    
    (players 2)
    (equipment 
        { 
        (board <Board:type> use:Edge)
        (piece "Ball" Neutral) 
        }
    )    
    
    (rules     	 
        (start
            <Board:start>
        )
        
        (play
            (move
                Remove
                (sites Occupied by:Neutral Edge)
            )
        )
        (end 
            <Board:limit>
        )
    )
)

//------------------------------------------------------------------------------

(option "Board" <Board> args:{ <type> <start> <limit>}
    {
    (item "Graph1"             
        <
        (graph
            vertices:{ {1 0} {5 0} {0 3} {6 3} {1 6} {5 6}}
            edges:{ {0 1} {0 2} {0 3} {0 4} {0 5} {1 2} {1 3} {1 4} {1 5} 
            {2 3} {2 4} {2 5} {3 4} {3 5} {4 5}}
        )
        >  
        <
        {
        (set Neutral Edge (sites Board Edge))                        
        }
        > 
        <
        {
        (if (is RegularGraph (player Neutral) odd:true) (result Mover Win))
        (if (is RegularGraph (player Neutral) even:true) (result Next Win))
        }
        >        
        "The game is played on the Graph1 with even number of vertices."
    )* 
    
    (item "Graph2"             
        <
        (graph
            vertices:{ {0 1} {4 0} {8 1} {4 2} {3 4} {5 4} {1 5} {7 5} {4 9}}
            edges:{ {0 1} {0 2} {0 3} {0 4} {0 5} {0 6} {0 7} {0 8} {1 2} {1 3} {1 4} {1 5} {1 6} {1 7} {1 8} {2 3} {2 4} {2 5} {2 6}
            {2 7} {2 8} {3 4} {3 5} {3 6} {3 7} {3 8} {4 5} {4 6} {4 7} {4 8} {5 6} {5 7} {5 8} {6 7} {6 8} {7 8}}
        )
        >  
        <
        {
        (set Neutral Edge (sites Board Edge))                        
        }
        > 
        <
        {
        (if (is RegularGraph (player Neutral) odd:true) (result Next Win))
        (if (is RegularGraph (player Neutral) even:true) (result Mover Win))
        }
        >        
        "The game is played on the Graph2 with odd number of vertices."
    ) 
    
    (item "Graph3"             
        <
        (graph
            vertices:{ 
            {2 0} {9 0} {6 1} {4 2} {9 2} {3 3} {0 4} {3 5} {6 3} {8 5} {11 4} {2 8} 
            {7 7} {9 8}}
            edges:{ 
            {0 1} {0 2} {0 3} {0 4} {0 5} {0 6} {0 7} {0 8} {0 9} {0 10} {0 11} {0 12} {0 13}
            {1 2} {1 3} {1 4} {1 5} {1 6} {1 7} {1 8} {1 9} {1 10} {1 11} {1 12} {1 13}
            {2 3} {2 4} {2 5} {2 6} {2 7} {2 8} {2 9} {2 10} {2 11} {2 12} {2 13}
            {3 4} {3 5} {3 6} {3 7} {3 8} {3 9} {3 10} {3 11} {3 12} {3 13}
            {4 5} {4 6} {4 7} {4 8} {4 9} {4 10} {4 11} {4 12} {4 13}
            {5 6} {5 7} {5 8} {5 9} {5 10} {5 11} {5 12} {5 13}
            {6 7} {6 8} {6 9} {6 10} {6 11} {6 12} {6 13}
            {7 8} {7 9} {7 10} {7 11} {7 12} {7 13}
            {8 9} {8 10} {8 11} {8 12} {8 13}
            {9 10} {9 11} {9 12} {9 13}
            {10 11} {10 12} {10 13}
            {11 12} {11 13} {12 13}
            }
        )
        >  
        <
        {
        (set Neutral Edge (sites Board Edge))                        
        }
        > 
        <
        {
        (if (is RegularGraph (player Neutral) odd:true) (result Mover Win))
        (if (is RegularGraph (player Neutral) even:true) (result Next Win))
        }
        >       
        "The game is played on the Graph3 with even number of vertices."
    )     
})

//------------------------------------------------------------------------------

(metadata
    
    (info
        {
        (description "Dilion is a multiplayer graph theory game, which is based on the principle of a regular graph. A graph is regular if all the vertices have the same degree.")
        (rules "At each turn, a player removes an edge in order to make the graph regular. When the graph is converted to a regular graph if the graph contains an even number of vertices with an odd degree, the mover wins. However, if the graph has an even degree, the next player wins. The rule is opposite for an odd number of vertices.")
        (version "0.9.5")
        (classification "math/graph")
        (author "Tahmina Begum")
        (credit "Tahmina Begum 25-05-2020")
        (date "25-04-2020")
        }
    )
    
    (graphics {
        (player Colour Neutral (colour DarkBlue))
        (board Style PenAndPaper)
        (show Edges ThinDotted (colour 200 200 220))
    })
    (ai
        "Dilion_ai"
    )
)

